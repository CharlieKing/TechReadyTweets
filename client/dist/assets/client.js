eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"client/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    // import App from \'../app\';\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTAdapter.extend({\n        // host: \'http://techreadytweets.azurewebsites.net\'\n    });\n\n    // Uncomment to use local storage!\n    // App.ApplicationSerializer = DS.LSSerializer.extend();\n    // export default DS.LSAdapter.extend({\n    //     namespace: \'TechReadyTwitter\'\n    // });\n  });//# sourceURL=client/adapters/application.js");

;eval("define(\"client/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=client/app.js");

;eval("define(\"client/controllers/timeline\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n        sortProperties: [\'timestamp\'],\n        sortAscending: false,\n\n        tweetDisabled: function () {\n            var name = this.get(\'name\'),\n                draft = this.get(\'tweetDraft\');\n\n            if (name && draft && name !== \'\' && draft !== \'\' && draft.length < 160) {\n                return false;\n            } else {\n                return true;\n            }\n        }.property(\'name\', \'tweetDraft\'),\n\n        init: function () {\n            this._super();\n            this.refreshData();\n        },\n\n        refreshData: function () {\n            var self = this;\n            Ember.run.later(this, function() {\n                self.store.find(\'tweet\');\n                self.refreshData();\n            }, 600);\n        },\n\n        actions: {\n            tweet: function () {\n                var author = this.get(\'name\'),\n                    message = this.get(\'tweetDraft\'),\n                    timestamp = new Date().getTime();\n\n                var tweet = this.store.createRecord(\'tweet\', {\n                    author: author,\n                    message: message,\n                    timestamp: timestamp\n                });\n\n                tweet.save();\n            }\n        }\n    });\n  });//# sourceURL=client/controllers/timeline.js");

;eval("define(\"client/controllers/tweet\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n        created: function () {\n            return new Date(this.get(\'timestamp\')).toLocaleTimeString();\n        }.property(\'timestamp\')\n    });\n  });//# sourceURL=client/controllers/tweet.js");

;eval("define(\"client/initializers/export-application-global\", \n  [\"ember\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=client/initializers/export-application-global.js");

;eval("define(\"client/models/tweet\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n        author: DS.attr(\'string\'),\n        message: DS.attr(\'string\'),\n        timestamp: DS.attr(\'number\')\n    });\n  });//# sourceURL=client/models/tweet.js");

;eval("define(\"client/router\", \n  [\"ember\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'timeline\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=client/router.js");

;eval("define(\"client/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n        beforeModel: function() {\n            this.transitionTo(\'timeline\');\n        }\n    });\n  });//# sourceURL=client/routes/application.js");

;eval("define(\"client/routes/timeline\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n        model: function () {\n            return this.store.find(\'tweet\');\n        }\n    });\n  });//# sourceURL=client/routes/timeline.js");

;eval("define(\"client/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<h2 id=\'title\'>Welcome to the TechReady Twitter Clone</h2>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/application.js");

;eval("define(\"client/templates/timeline\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <div class=\\\"well\\\">\\n        <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"tweet.message\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n        <small>- \");\n      stack1 = helpers._triageMustache.call(depth0, \"tweet.author\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" at \");\n      stack1 = helpers._triageMustache.call(depth0, \"tweet.created\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</small>\\n    </div>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <span>Hi \");\n      stack1 = helpers._triageMustache.call(depth0, \"name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\", let\'s tweet something!</span>\\n    </div>\\n    <div class=\\\"panel-body row\\\">\\n        <div class=\\\"col-md-2\\\">\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"name\"),\n        \'type\': (\"text\"),\n        \'class\': (\"form-control floating-label\"),\n        \'placeholder\': (\"What\'s your name?\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'class\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'class\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        </div>\\n        <div class=\\\"col-md-10\\\">\\n            \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"tweetDraft\"),\n        \'type\': (\"text\"),\n        \'class\': (\"form-control floating-label\"),\n        \'placeholder\': (\"What\'s your tweet?\")\n      },hashTypes:{\'value\': \"ID\",\'type\': \"STRING\",\'class\': \"STRING\",\'placeholder\': \"STRING\"},hashContexts:{\'value\': depth0,\'type\': depth0,\'class\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        </div>\\n        <div class=\\\"col-md-2 col-md-offset-10 text-right\\\">\\n            <button \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"tweet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"tweetDisabled\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" class=\\\"btn btn-primary btn-raised\\\">Tweet</button>\\n        </div>\\n    </div>\\n</div>\\n\\n<h2>Timeline</h2>\\n\");\n      stack1 = helpers.each.call(depth0, \"tweet\", \"in\", \"arrangedContent\", {hash:{\n        \'itemController\': (\"tweet\")\n      },hashTypes:{\'itemController\': \"STRING\"},hashContexts:{\'itemController\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/timeline.js");

;eval("define(\"client/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/adapters/application.jshint.js");

;eval("define(\"client/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/app.jshint.js");

;eval("define(\"client/tests/client/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/helpers\');\n    test(\'client/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'client/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/helpers/resolver.jshint.js");

;eval("define(\"client/tests/client/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/helpers\');\n    test(\'client/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'client/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/helpers/start-app.jshint.js");

;eval("define(\"client/tests/client/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests\');\n    test(\'client/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'client/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/test-helper.jshint.js");

;eval("define(\"client/tests/client/tests/unit/adapters/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/adapters\');\n    test(\'client/tests/unit/adapters/application-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/adapters/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/adapters/application-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/controllers/timeline-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/controllers\');\n    test(\'client/tests/unit/controllers/timeline-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/controllers/timeline-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/controllers/timeline-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/controllers/tweet-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/controllers\');\n    test(\'client/tests/unit/controllers/tweet-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/controllers/tweet-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/controllers/tweet-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/models/tweet-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/models\');\n    test(\'client/tests/unit/models/tweet-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/models/tweet-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/models/tweet-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/routes\');\n    test(\'client/tests/unit/routes/application-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/routes/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/routes/application-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/routes/timeline-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/routes\');\n    test(\'client/tests/unit/routes/timeline-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/routes/timeline-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/routes/timeline-test.jshint.js");

;eval("define(\"client/tests/controllers/timeline.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/timeline.js should pass jshint\', function() { \n      ok(true, \'controllers/timeline.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/controllers/timeline.jshint.js");

;eval("define(\"client/tests/controllers/tweet.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/tweet.js should pass jshint\', function() { \n      ok(true, \'controllers/tweet.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/controllers/tweet.jshint.js");

;eval("define(\"client/tests/helpers/resolver\", \n  [\"ember/resolver\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=client/tests/helpers/resolver.js");

;eval("define(\"client/tests/helpers/start-app\", \n  [\"ember\",\"client/app\",\"client/router\",\"client/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=client/tests/helpers/start-app.js");

;eval("define(\"client/tests/models/tweet.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/tweet.js should pass jshint\', function() { \n      ok(true, \'models/tweet.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/models/tweet.jshint.js");

;eval("define(\"client/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/router.jshint.js");

;eval("define(\"client/tests/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/application.js should pass jshint\', function() { \n      ok(true, \'routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/routes/application.jshint.js");

;eval("define(\"client/tests/routes/timeline.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/timeline.js should pass jshint\', function() { \n      ok(true, \'routes/timeline.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/routes/timeline.jshint.js");

;eval("define(\"client/tests/test-helper\", \n  [\"client/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=client/tests/test-helper.js");

;eval("define(\"client/tests/unit/adapters/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'adapter:application\', \'ApplicationAdapter\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var adapter = this.subject();\n      ok(adapter);\n    });\n  });//# sourceURL=client/tests/unit/adapters/application-test.js");

;eval("define(\"client/tests/unit/controllers/timeline-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:timeline\', \'TimelineController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=client/tests/unit/controllers/timeline-test.js");

;eval("define(\"client/tests/unit/controllers/tweet-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'controller:tweet\', \'TweetController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=client/tests/unit/controllers/tweet-test.js");

;eval("define(\"client/tests/unit/models/tweet-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleForModel = __dependency1__.moduleForModel;\n    var test = __dependency1__.test;\n\n    moduleForModel(\'tweet\', \'Tweet\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(!!model);\n    });\n  });//# sourceURL=client/tests/unit/models/tweet-test.js");

;eval("define(\"client/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:application\', \'ApplicationRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=client/tests/unit/routes/application-test.js");

;eval("define(\"client/tests/unit/routes/timeline-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var moduleFor = __dependency1__.moduleFor;\n    var test = __dependency1__.test;\n\n    moduleFor(\'route:timeline\', \'TimelineRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=client/tests/unit/routes/timeline-test.js");

/* jshint ignore:start */

define('client/config/environment', ['ember'], function(Ember) {
  var prefix = 'client';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('client/tests/test-helper');
} else {
  require('client/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
